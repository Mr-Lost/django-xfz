function Banner(){this.index=1,this.bannerWidth=800,this.BannerGroup=$("#banner-group"),this.bannerUl=$("#banner-ul"),this.UlLi=this.bannerUl.children("li"),this.bannerCount=this.UlLi.length,this.leftArrow=$(".left-arrow"),this.rightArrow=$(".right-arrow"),this.pageControl=$(".page-control")}function NewsList(){this.page=2,this.loadMoreBtn=$("#load-more-btn"),this.category_id=0,this.ul=$(".list-inner-group")}Banner.prototype.animate=function(){var n=this;n.bannerUl.stop().animate({left:-n.bannerWidth*n.index},500);var e=n.index;e=0===e?n.bannerCount-1:e===n.bannerCount+1?0:n.index-1,n.pageControl.children("li").eq(e).addClass("active").siblings().removeClass("active")},Banner.prototype.loop=function(){var n=this;n.timer=setInterval(function(){n.index>=n.bannerCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()},2e3)},Banner.prototype.listenHover=function(){var n=this;n.BannerGroup.hover(function(){clearInterval(n.timer),n.index>=n.bannerCount+1&&(n.bannerUl.css({left:-n.bannerWidth}),n.index=2),n.toggleArrow(!0)},function(){n.loop(),n.toggleArrow(!1)})},Banner.prototype.toggleArrow=function(n){var e=this;n?(e.leftArrow.show(),e.rightArrow.show()):(e.leftArrow.hide(),e.rightArrow.hide())},Banner.prototype.listenArrowClick=function(){var n=this;n.leftArrow.click(function(){0===n.index?(n.bannerUl.css({left:-n.bannerWidth*n.bannerCount}),n.index=n.bannerCount-1):n.index--,n.animate()}),n.rightArrow.click(function(){n.index===n.bannerCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()})},Banner.prototype.bannerSpotInit=function(){for(var n=this,e=0;e<n.bannerCount;e++){var t=$("<li></li>");n.pageControl.append(t),0===e&&t.addClass("active")}n.pageControl.css({width:26*n.bannerCount})},Banner.prototype.listenSpotClick=function(){var t=this;t.pageControl.children("li").each(function(n,e){$(e).click(function(){t.index=n+1,t.animate()})})},Banner.prototype.bannerInit=function(){var n=this,e=n.UlLi.eq(0).clone(),t=n.UlLi.eq(n.bannerCount-1).clone();n.bannerUl.append(e),n.bannerUl.prepend(t),n.bannerUl.css({width:(n.bannerCount+2)*n.bannerWidth,left:-n.bannerWidth})},Banner.prototype.run=function(){var n=this;n.listenHover(),n.listenArrowClick(),n.bannerSpotInit(),n.listenSpotClick(),n.bannerInit(),n.loop()},NewsList.prototype.listenLoadMoreEvent=function(){var r=this;r.loadMoreBtn.click(function(){xfzajax.get({url:"/news/news_page/",data:{p:r.page,category_id:r.category_id},success:function(n){if(200===n.code){var e=n.data;if(0<e.length){var t=template("news_item",{newses:e});r.ul.append(t),r.page+=1}else r.loadMoreBtn.hide()}}})})},NewsList.prototype.listenCategoryChangeEvent=function(){var a=this;$(".list-tab").children().click(function(){var r=$(this),i=r.attr("data-category");xfzajax.get({url:"/news/news_page/",data:{p:1,category_id:i},success:function(n){if(200===n.code){var e=n.data,t=template("news_item",{newses:e});a.ul.empty(),a.ul.append(t),a.page=2,a.category_id=i,r.addClass("active").siblings().removeClass("active"),a.loadMoreBtn.show()}}})})},NewsList.prototype.run=function(){this.listenLoadMoreEvent(),this.listenCategoryChangeEvent()},$(function(){(new Banner).run(),(new NewsList).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ld3MvaW5kZXguanMiXSwibmFtZXMiOlsiQmFubmVyIiwidGhpcyIsImluZGV4IiwiYmFubmVyV2lkdGgiLCJCYW5uZXJHcm91cCIsIiQiLCJiYW5uZXJVbCIsIlVsTGkiLCJjaGlsZHJlbiIsImJhbm5lckNvdW50IiwibGVuZ3RoIiwibGVmdEFycm93IiwicmlnaHRBcnJvdyIsInBhZ2VDb250cm9sIiwiTmV3c0xpc3QiLCJwYWdlIiwibG9hZE1vcmVCdG4iLCJjYXRlZ29yeV9pZCIsInVsIiwicHJvdG90eXBlIiwiYW5pbWF0ZSIsInNlbGYiLCJzdG9wIiwibGVmdCIsImVxIiwiYWRkQ2xhc3MiLCJzaWJsaW5ncyIsInJlbW92ZUNsYXNzIiwibG9vcCIsInRpbWVyIiwic2V0SW50ZXJ2YWwiLCJjc3MiLCJsaXN0ZW5Ib3ZlciIsImhvdmVyIiwiY2xlYXJJbnRlcnZhbCIsInRvZ2dsZUFycm93IiwiaXNzaG93Iiwic2hvdyIsImhpZGUiLCJsaXN0ZW5BcnJvd0NsaWNrIiwiY2xpY2siLCJiYW5uZXJTcG90SW5pdCIsImkiLCJjaXJjbGUiLCJhcHBlbmQiLCJ3aWR0aCIsImxpc3RlblNwb3RDbGljayIsImVhY2giLCJvYmoiLCJiYW5uZXJJbml0IiwiZmlzcnRCYW5uZXIiLCJjbG9uZSIsImxhc3RCYW5uZXIiLCJwcmVwZW5kIiwicnVuIiwibGlzdGVuTG9hZE1vcmVFdmVudCIsInhmemFqYXgiLCJnZXQiLCJ1cmwiLCJkYXRhIiwicCIsInN1Y2Nlc3MiLCJyZXN1bHQiLCJuZXdzZXMiLCJ0cGwiLCJ0ZW1wbGF0ZSIsImxpc3RlbkNhdGVnb3J5Q2hhbmdlRXZlbnQiLCJ0YWciLCJhdHRyIiwiZW1wdHkiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLFNBQ0xDLEtBQUtDLE1BQVEsRUFDYkQsS0FBS0UsWUFBYyxJQUNuQkYsS0FBS0csWUFBY0MsRUFBRSxpQkFDckJKLEtBQUtLLFNBQVdELEVBQUUsY0FDbEJKLEtBQUtNLEtBQU9OLEtBQUtLLFNBQVNFLFNB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QUlDLEtBQUssaUJBRTNCWixRQUFRQyxJQUFJLENBQ1JDLElBQU0sbUJBQ05DLEtBQVEsQ0FDSkMsRUFKRyxFQUtIM0MsWUFBZUEsR0FFbkI0QyxRQUFXLFNBQVVDLEdBQ2pCLEdBQXNCLE1BQW5CQSxFQUFhLEtBQVUsQ0FDdEIsSUFBSUMsRUFBU0QsRUFBYSxLQUN0QkUsRUFBTUMsU0FBUyxZQUFhLENBQUNGLE9BQVVBLElBQzNDMUMsRUFBS0gsR0FBR21ELFFBQ1JoRCxFQUFLSCxHQUFHMEIsT0FBT29CLEdBQ2YzQyxFQUFLTixLQUFPLEVBQ1pNLEVBQUtKLFlBQWNBLEVBQ25Ca0QsRUFBSTFDLFNBQVMsVUFBVUMsV0FBV0MsWUFBWSxVQUM5Q04sRUFBS0wsWUFBWXFCLGNBT3JDdkIsU0FBU0ssVUFBVW1DLElBQU0sV0FDVnJELEtBQ05zRCxzQkFETXRELEtBRU5pRSw2QkFJVDdELEVBQUUsWUFDYyxJQUFJTCxRQUNWc0QsT0FDUSxJQUFJeEMsVUFDVndDIiwiZmlsZSI6Im5ld3MvaW5kZXgubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gQmFubmVyKCkge1xyXG4gICAgdGhpcy5pbmRleCA9IDE7XHJcbiAgICB0aGlzLmJhbm5lcldpZHRoID0gODAwO1xyXG4gICAgdGhpcy5CYW5uZXJHcm91cCA9ICQoXCIjYmFubmVyLWdyb3VwXCIpO1xyXG4gICAgdGhpcy5iYW5uZXJVbCA9ICQoXCIjYmFubmVyLXVsXCIpO1xyXG4gICAgdGhpcy5VbExpID0gdGhpcy5iYW5uZXJVbC5jaGlsZHJlbignbGknKTtcclxuICAgIHRoaXMuYmFubmVyQ291bnQgPSB0aGlzLlVsTGkubGVuZ3RoO1xyXG4gICAgdGhpcy5sZWZ0QXJyb3cgPSAkKFwiLmxlZnQtYXJyb3dcIik7XHJcbiAgICB0aGlzLnJpZ2h0QXJyb3cgPSAkKFwiLnJpZ2h0LWFycm93XCIpO1xyXG4gICAgdGhpcy5wYWdlQ29udHJvbCA9ICQoXCIucGFnZS1jb250cm9sXCIpO1xyXG59XHJcblxyXG4vL+WbvueJh+i9ruaSremAn+W6puWNleeLrOWHuuadpeWumuS5ieS4uuS4gOS4quaWueazle+8jOS+v+S6jue7n+S4gOS/ruaUuei9ruaSremAn+W6plxyXG5CYW5uZXIucHJvdG90eXBlLmFuaW1hdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBzZWxmLmJhbm5lclVsLnN0b3AoKS5hbmltYXRlKHtcImxlZnRcIjotc2VsZi5iYW5uZXJXaWR0aCpzZWxmLmluZGV4fSwgNTAwKTtcclxuICAgIC8v6Ieq5Yqo6L2u5pKt5ZKM54K55Ye7566t5aS05pe25qC55o2uaW5kZXjpgInkuK3lvZPliY3lsI/lnIbngrlcclxuICAgIHZhciBpbmRleCA9IHNlbGYuaW5kZXg7XHJcbiAgICBpZihpbmRleCA9PT0gMCl7XHJcbiAgICAgICAgaW5kZXggPSBzZWxmLmJhbm5lckNvdW50IC0gMTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYoaW5kZXggPT09IHNlbGYuYmFubmVyQ291bnQgKyAxKXtcclxuICAgICAgICBpbmRleCA9IDA7XHJcbiAgICB9XHJcbiAgICBlbHNle1xyXG4gICAgICAgIGluZGV4ID0gc2VsZi5pbmRleCAtIDE7XHJcbiAgICB9XHJcbiAgICBzZWxmLnBhZ2VDb250cm9sLmNoaWxkcmVuKCdsaScpLmVxKGluZGV4KS5hZGRDbGFzcyhcImFjdGl2ZVwiKS5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG59O1xyXG5cclxuQmFubmVyLnByb3RvdHlwZS5sb29wID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgLy8gc2VsZi5iYW5uZXJVbC5jc3Moe1wibGVmdFwiOi04MDB9KTsvL+W3puenu++8jOaYvuekuuesrOS6jOW8oOWbvueJh1xyXG4gICAgLy/orr7nva7lrprml7bova7mkq1cclxuICAgIHNlbGYudGltZXIgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYoc2VsZi5pbmRleCA+PSBzZWxmLmJhbm5lckNvdW50ICsgMSl7XHJcbiAgICAgICAgICAgIHNlbGYuYmFubmVyVWwuY3NzKHsnbGVmdCc6IC1zZWxmLmJhbm5lcldpZHRofSk7XHJcbiAgICAgICAgICAgIHNlbGYuaW5kZXggPSAyO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICBzZWxmLmluZGV4Kys7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNlbGYuYW5pbWF0ZSgpO1xyXG4gICAgfSwgMjAwMCk7XHJcbn07XHJcblxyXG4vL+m8oOagh+aCrOWBnOWcqOi9ruaSreWbvuS4iuWImemdmeatoui9ruaSrVxyXG5CYW5uZXIucHJvdG90eXBlLmxpc3RlbkhvdmVyID0gZnVuY3Rpb24gKCkge1xyXG4gIHZhciBzZWxmID0gdGhpcztcclxuICBzZWxmLkJhbm5lckdyb3VwLmhvdmVyKGZ1bmN0aW9uICgpIHtcclxuICAgIGNsZWFySW50ZXJ2YWwoc2VsZi50aW1lcik7XHJcbiAgICAvLyDop6PlhrPova7mkq3lm77ova7mkq3liLDnrKzkuIDlvKDml7bvvIzpgJrov4fngrnlh7vlsI/lnIbngrnot7Povazova7mkq3lm77ml7bmu5rliqjmlrnlkJHkuI3mraPnoa7nmoTpl67pophcclxuICAgIGlmKHNlbGYuaW5kZXggPj0gc2VsZi5iYW5uZXJDb3VudCArIDEpe1xyXG4gICAgICAgIHNlbGYuYmFubmVyVWwuY3NzKHsnbGVmdCc6IC1zZWxmLmJhbm5lcldpZHRofSk7XHJcbiAgICAgICAgc2VsZi5pbmRleCA9IDI7XHJcbiAgICB9XHJcbiAgICBzZWxmLnRvZ2dsZUFycm93KHRydWUpO1xyXG4gIH0sIGZ1bmN0aW9uICgpIHtcclxuICAgICAgc2VsZi5sb29wKCk7XHJcbiAgICAgIHNlbGYudG9nZ2xlQXJyb3coZmFsc2UpO1xyXG4gIH0pXHJcbn07XHJcblxyXG4vL+i9ruaSreWbvuW3puWPs+eureWktOeahOaYvuekuuWSjOmakOiXj1xyXG5CYW5uZXIucHJvdG90eXBlLnRvZ2dsZUFycm93ID0gZnVuY3Rpb24gKGlzc2hvdykge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgaWYoaXNzaG93KXtcclxuICAgICAgICBzZWxmLmxlZnRBcnJvdy5zaG93KCk7XHJcbiAgICAgICAgc2VsZi5yaWdodEFycm93LnNob3coKTtcclxuICAgIH1cclxuICAgIGVsc2V7XHJcbiAgICAgICAgc2VsZi5sZWZ0QXJyb3cuaGlkZSgpO1xyXG4gICAgICAgIHNlbGYucmlnaHRBcnJvdy5oaWRlKCk7XHJcbiAgICB9XHJcbn07XHJcblxyXG4vL+ebkeWQrOW3puWPs+eureWktOiiq+eCueWHu1xyXG5CYW5uZXIucHJvdG90eXBlLmxpc3RlbkFycm93Q2xpY2sgPSBmdW5jdGlvbiAoKSB7XHJcbiAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gIHNlbGYubGVmdEFycm93LmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgLy8gMSA9PSAnMScgLT4gdHJ1ZSAgICAgICAxID09PSAnMScgLT4gZmFsc2VcclxuICAgICAgaWYoc2VsZi5pbmRleCA9PT0gMCl7XHJcbiAgICAgICAgICBzZWxmLmJhbm5lclVsLmNzcyh7J2xlZnQnOiAtc2VsZi5iYW5uZXJXaWR0aCpzZWxmLmJhbm5lckNvdW50fSk7XHJcbiAgICAgICAgICBzZWxmLmluZGV4ID0gc2VsZi5iYW5uZXJDb3VudCAtIDE7XHJcbiAgICAgIH1cclxuICAgICAgZWxzZXtcclxuICAgICAgICAgIHNlbGYuaW5kZXgtLTtcclxuICAgICAgfVxyXG4gICAgICBzZWxmLmFuaW1hdGUoKTtcclxuICB9KTtcclxuICBzZWxmLnJpZ2h0QXJyb3cuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICBpZihzZWxmLmluZGV4ID09PSBzZWxmLmJhbm5lckNvdW50ICsgMSl7XHJcbiAgICAgICAgICBzZWxmLmJhbm5lclVsLmNzcyh7J2xlZnQnOiAtc2VsZi5iYW5uZXJXaWR0aH0pO1xyXG4gICAgICAgICAgc2VsZi5pbmRleCA9IDI7XHJcbiAgICAgIH1cclxuICAgICAgZWxzZXtcclxuICAgICAgICAgIHNlbGYuaW5kZXgrKztcclxuICAgICAgfVxyXG4gICAgICBzZWxmLmFuaW1hdGUoKTtcclxuICB9KVxyXG59O1xyXG5cclxuLy/moLnmja7ova7mkq3lm77mlbDph4/nlJ/miJDlr7nlupTlsI/lnIbngrnvvIzlubborr7nva7lrr3luqZcclxuQmFubmVyLnByb3RvdHlwZS5iYW5uZXJTcG90SW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIGZvcih2YXIgaT0wOyBpIDwgc2VsZi5iYW5uZXJDb3VudDsgaSsrKXtcclxuICAgICAgICB2YXIgY2lyY2xlID0gJChcIjxsaT48L2xpPlwiKTtcclxuICAgICAgICBzZWxmLnBhZ2VDb250cm9sLmFwcGVuZChjaXJjbGUpO1xyXG4gICAgICAgIGlmKGkgPT09IDApe1xyXG4gICAgICAgICAgICBjaXJjbGUuYWRkQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgc2VsZi5wYWdlQ29udHJvbC5jc3Moeyd3aWR0aCc6IHNlbGYuYmFubmVyQ291bnQqMjZ9KTsvL+WFg+e0oOacrOi6qzEwcHjliqDkuIrlt6blj7PlkIQ4cHhcclxufTtcclxuXHJcbi8v54K55Ye75bCP5ZyG54K55YiH5o2i5Zu+54mHXHJcbkJhbm5lci5wcm90b3R5cGUubGlzdGVuU3BvdENsaWNrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgc2VsZi5wYWdlQ29udHJvbC5jaGlsZHJlbignbGknKS5lYWNoKGZ1bmN0aW9uIChpbmRleCwgb2JqKSB7XHJcbiAgICAgICAgJChvYmopLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgc2VsZi5pbmRleCA9IGluZGV4ICsgMTtcclxuICAgICAgICAgICAgc2VsZi5hbmltYXRlKCk7XHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn07XHJcblxyXG4vL+WujOWWhOi9ruaSreaAp+iDve+8jOesrOS4gOW8oOWSjOacgOWQjuS4gOW8oOiDveihlOaOpea7muWKqFxyXG5CYW5uZXIucHJvdG90eXBlLmJhbm5lckluaXQgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgdmFyIGZpc3J0QmFubmVyID0gc2VsZi5VbExpLmVxKDApLmNsb25lKCk7XHJcbiAgICB2YXIgbGFzdEJhbm5lciA9IHNlbGYuVWxMaS5lcShzZWxmLmJhbm5lckNvdW50LTEpLmNsb25lKCk7XHJcbiAgICBzZWxmLmJhbm5lclVsLmFwcGVuZChmaXNydEJhbm5lcik7XHJcbiAgICBzZWxmLmJhbm5lclVsLnByZXBlbmQobGFzdEJhbm5lcik7XHJcbiAgICBzZWxmLmJhbm5lclVsLmNzcyh7J3dpZHRoJzogKHNlbGYuYmFubmVyQ291bnQrMikqc2VsZi5iYW5uZXJXaWR0aCwgJ2xlZnQnOiAtc2VsZi5iYW5uZXJXaWR0aH0pO1xyXG59O1xyXG5cclxuQmFubmVyLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBzZWxmLmxpc3RlbkhvdmVyKCk7XHJcbiAgICBzZWxmLmxpc3RlbkFycm93Q2xpY2soKTtcclxuICAgIHNlbGYuYmFubmVyU3BvdEluaXQoKTtcclxuICAgIHNlbGYubGlzdGVuU3BvdENsaWNrKCk7XHJcbiAgICBzZWxmLmJhbm5lckluaXQoKTtcclxuICAgIHNlbGYubG9vcCgpO1xyXG59O1xyXG5cclxuZnVuY3Rpb24gTmV3c0xpc3QoKXtcclxuICAgIHRoaXMucGFnZSA9IDI7XHJcbiAgICB0aGlzLmxvYWRNb3JlQnRuID0gJCgnI2xvYWQtbW9yZS1idG4nKTtcclxuICAgIHRoaXMuY2F0ZWdvcnlfaWQgPSAwO1xyXG4gICAgdGhpcy51bCA9ICQoJy5saXN0LWlubmVyLWdyb3VwJyk7XHJcbn1cclxuXHJcbk5ld3NMaXN0LnByb3RvdHlwZS5saXN0ZW5Mb2FkTW9yZUV2ZW50ID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHNlbGYubG9hZE1vcmVCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHhmemFqYXguZ2V0KHtcclxuICAgICAgICAgICAgJ3VybCc6ICcvbmV3cy9uZXdzX3BhZ2UvJyxcclxuICAgICAgICAgICAgJ2RhdGEnOiB7XHJcbiAgICAgICAgICAgICAgICAncCc6IHNlbGYucGFnZSxcclxuICAgICAgICAgICAgICAgICdjYXRlZ29yeV9pZCc6IHNlbGYuY2F0ZWdvcnlfaWRcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICBpZihyZXN1bHRbJ2NvZGUnXSA9PT0gMjAwKXtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3c2VzID0gcmVzdWx0WydkYXRhJ107XHJcbiAgICAgICAgICAgICAgICAgICAgaWYobmV3c2VzLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHBsID0gdGVtcGxhdGUoXCJuZXdzX2l0ZW1cIiwge1wibmV3c2VzXCI6IG5ld3Nlc30pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnVsLmFwcGVuZCh0cGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnBhZ2UgKz0gMTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5sb2FkTW9yZUJ0bi5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn07XHJcblxyXG5OZXdzTGlzdC5wcm90b3R5cGUubGlzdGVuQ2F0ZWdvcnlDaGFuZ2VFdmVudCA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB2YXIgdGFnR3JvdXAgPSAkKCcubGlzdC10YWInKTtcclxuICAgIHRhZ0dyb3VwLmNoaWxkcmVuKCkuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB0YWcgPSAkKHRoaXMpO1xyXG4gICAgICAgIHZhciBjYXRlZ29yeV9pZCA9IHRhZy5hdHRyKCdkYXRhLWNhdGVnb3J5Jyk7XHJcbiAgICAgICAgdmFyIHBhZ2UgPSAxO1xyXG4gICAgICAgIHhmemFqYXguZ2V0KHtcclxuICAgICAgICAgICAgJ3VybCc6Jy9uZXdzL25ld3NfcGFnZS8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICdwJzogcGFnZSxcclxuICAgICAgICAgICAgICAgICdjYXRlZ29yeV9pZCc6IGNhdGVnb3J5X2lkXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgaWYocmVzdWx0Wydjb2RlJ10gPT09IDIwMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5ld3NlcyA9IHJlc3VsdFsnZGF0YSddO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciB0cGwgPSB0ZW1wbGF0ZShcIm5ld3NfaXRlbVwiLCB7J25ld3Nlcyc6IG5ld3Nlc30pO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYudWwuZW1wdHkoKTtcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLnVsLmFwcGVuZCh0cGwpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYucGFnZSA9IDI7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jYXRlZ29yeV9pZCA9IGNhdGVnb3J5X2lkO1xyXG4gICAgICAgICAgICAgICAgICAgIHRhZy5hZGRDbGFzcygnYWN0aXZlJykuc2libGluZ3MoKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5sb2FkTW9yZUJ0bi5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0pXHJcbn07XHJcblxyXG5OZXdzTGlzdC5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHNlbGYubGlzdGVuTG9hZE1vcmVFdmVudCgpO1xyXG4gICAgc2VsZi5saXN0ZW5DYXRlZ29yeUNoYW5nZUV2ZW50KCk7XHJcbn07XHJcblxyXG4vL+aVtOS4qmh0bWzmlofmoaPliqDovb3lrozlkI7miY3miafooYwk5Lit55qE5Ye95pWwXHJcbiQoZnVuY3Rpb24gKCkge1xyXG4gICB2YXIgYmFubmVyID0gbmV3IEJhbm5lcigpO1xyXG4gICBiYW5uZXIucnVuKCk7XHJcbiAgIHZhciBuZXdzTGlzdCA9IG5ldyBOZXdzTGlzdCgpO1xyXG4gICBuZXdzTGlzdC5ydW4oKTtcclxufSk7Il19
